/*
 * Copyright 2016 Chandra X-Ray Observatory.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package cfa.vo.iris.visualizer.metadata;

import java.util.Collection;
import java.util.LinkedList;
import java.util.List;
import java.util.logging.Logger;

import cfa.vo.iris.IWorkspace;
import cfa.vo.iris.sed.ExtSed;
import cfa.vo.iris.sed.stil.SegmentStarTable;
import cfa.vo.iris.visualizer.plotter.SegmentLayer;
import cfa.vo.iris.visualizer.preferences.SedPreferences;
import cfa.vo.iris.visualizer.preferences.VisualizerChangeEvent;
import cfa.vo.iris.visualizer.preferences.VisualizerCommand;
import cfa.vo.iris.visualizer.preferences.VisualizerComponentPreferences;
import cfa.vo.iris.visualizer.preferences.VisualizerListener;
import cfa.vo.iris.visualizer.stil.IrisStarTable;
import cfa.vo.iris.visualizer.stil.IrisStarTableUtils;
import uk.ac.starlink.table.EmptyStarTable;
import uk.ac.starlink.table.StarTable;
import uk.ac.starlink.table.gui.StarJTable;

public class MetadataBrowser extends javax.swing.JInternalFrame {

    private static final long serialVersionUID = 1L;
    private static final Logger logger = Logger
            .getLogger(MetadataBrowser.class.getName());
    private static final StarTable EMPTY_STARTABLE = new EmptyStarTable();
    private static final StarJTable EMPTY_JTABLE = new StarJTable(
            EMPTY_STARTABLE, false);

    protected final VisualizerComponentPreferences preferences;
    protected final IWorkspace ws;

    protected StarJTable plotMetadataTable;
    protected StarJTable pointMetadataTable;
    protected StarJTable segmentMetadataTable;
    protected ExtSed selected;

    /**
     * Creates new form MetadataBrowser
     */
    public MetadataBrowser(IWorkspace ws,
            VisualizerComponentPreferences preferences) 
    {
        this.preferences = preferences;
        this.ws = ws;

        initComponents();
        setChangeListener();

        resetData();
    }

    protected void setChangeListener() {
        VisualizerChangeEvent.getInstance().add(new MetadataChangeListener());
    }

    public void resetData() {
        this.selected = (ExtSed) ws.getSedManager().getSelected();
        
        if (selected == null) {
            clearData();
        } else {
            setDataTables();
        }

        plotterMetadataScrollPane.setViewportView(plotMetadataTable);
        pointMetadataScrollPane.setViewportView(pointMetadataTable);
        segmentMetadataScrollPane.setViewportView(segmentMetadataTable);
    }

    protected void clearData() {
        plotMetadataTable = EMPTY_JTABLE;
        pointMetadataTable = EMPTY_JTABLE;
        segmentMetadataTable = EMPTY_JTABLE;
    }
    
    protected void setDataTables() {
        
        List<SegmentStarTable> plotterDataTables = new LinkedList<>();
        List<StarTable> dataTables = new LinkedList<>();
        
        for (SegmentLayer layer : preferences.getSelectedLayers()) {
            plotterDataTables.add(layer.getInSource().getPlotterTable());
            dataTables.add(layer.getInSource().getDataTable());
        }
        
        try {
            plotMetadataTable = new StarJTable(
                    IrisStarTableUtils.concatPlotDataTables(plotterDataTables), true);
            pointMetadataTable = new StarJTable(
                    IrisStarTableUtils.concatDataTables(dataTables), false);
            
            // TODO: Segment metadata tables
            segmentMetadataTable = EMPTY_JTABLE;
        } catch (RuntimeException e) {
            throw e;
        } catch (Exception e) {
            throw new RuntimeException(e);
        }
        
        plotMetadataTable.configureColumnWidths(200, 20);
        pointMetadataTable.configureColumnWidths(200, 20);
        segmentMetadataTable.configureColumnWidths(200, 20);
    }

    private class MetadataChangeListener implements VisualizerListener {

        @Override
        public void process(ExtSed source, VisualizerCommand payload) {
            if (VisualizerCommand.RESET.equals(payload)
                || VisualizerCommand.SELECTED.equals(payload)
                || VisualizerCommand.REDRAW.equals(payload)) 
            {
                resetData();
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        dataTabsPane = new javax.swing.JTabbedPane();
        plotterMetadataPanel = new javax.swing.JPanel();
        plotterMetadataScrollPane = new javax.swing.JScrollPane();
        pointMetadataPanel = new javax.swing.JPanel();
        pointMetadataScrollPane = new javax.swing.JScrollPane();
        segmentMetadataPanel = new javax.swing.JPanel();
        segmentMetadataScrollPane = new javax.swing.JScrollPane();
        filterExpressionField = new javax.swing.JTextField();
        selectPointsButton = new javax.swing.JButton();
        applyMaskButton = new javax.swing.JButton();
        selectAllButton = new javax.swing.JButton();
        invertSelectionButton = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        fileMenu = new javax.swing.JMenu();
        extractToSedMenuItem = new javax.swing.JMenuItem();
        broadcastToSampMenuItem = new javax.swing.JMenuItem();
        createSubsetMenuItem = new javax.swing.JMenuItem();
        editMenu = new javax.swing.JMenu();
        createNewColumnMenuItem = new javax.swing.JMenuItem();
        restoreSetMenuItem = new javax.swing.JMenuItem();
        selectMenu = new javax.swing.JMenu();
        invertSelectionMenuItem = new javax.swing.JMenuItem();
        applyMaskMenuItem = new javax.swing.JMenuItem();

        setClosable(true);
        setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Metadata Browser");

        javax.swing.GroupLayout plotterMetadataPanelLayout = new javax.swing.GroupLayout(plotterMetadataPanel);
        plotterMetadataPanel.setLayout(plotterMetadataPanelLayout);
        plotterMetadataPanelLayout.setHorizontalGroup(
            plotterMetadataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(plotterMetadataScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 1066, Short.MAX_VALUE)
        );
        plotterMetadataPanelLayout.setVerticalGroup(
            plotterMetadataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(plotterMetadataScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 570, Short.MAX_VALUE)
        );

        dataTabsPane.addTab("Plotter Data", plotterMetadataPanel);

        javax.swing.GroupLayout pointMetadataPanelLayout = new javax.swing.GroupLayout(pointMetadataPanel);
        pointMetadataPanel.setLayout(pointMetadataPanelLayout);
        pointMetadataPanelLayout.setHorizontalGroup(
            pointMetadataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pointMetadataScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 1066, Short.MAX_VALUE)
        );
        pointMetadataPanelLayout.setVerticalGroup(
            pointMetadataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pointMetadataScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 570, Short.MAX_VALUE)
        );

        dataTabsPane.addTab("Point Metadata", pointMetadataPanel);

        javax.swing.GroupLayout segmentMetadataPanelLayout = new javax.swing.GroupLayout(segmentMetadataPanel);
        segmentMetadataPanel.setLayout(segmentMetadataPanelLayout);
        segmentMetadataPanelLayout.setHorizontalGroup(
            segmentMetadataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(segmentMetadataScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 1066, Short.MAX_VALUE)
        );
        segmentMetadataPanelLayout.setVerticalGroup(
            segmentMetadataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(segmentMetadataScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 570, Short.MAX_VALUE)
        );

        dataTabsPane.addTab("Segment Metadata", segmentMetadataPanel);

        filterExpressionField.setText("Filter Expression");

        selectPointsButton.setText("Select Points");

        applyMaskButton.setText("Apply Mask");
        applyMaskButton.setName(""); // NOI18N

        selectAllButton.setText("Select All");
        selectAllButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectAllButtonActionPerformed(evt);
            }
        });

        invertSelectionButton.setText("Invert Selection");
        invertSelectionButton.setActionCommand("");

        fileMenu.setText("File");
        fileMenu.setName("Extract"); // NOI18N

        extractToSedMenuItem.setText("Extract to New SED");
        fileMenu.add(extractToSedMenuItem);

        broadcastToSampMenuItem.setText("Broadcast to SAMP");
        fileMenu.add(broadcastToSampMenuItem);

        createSubsetMenuItem.setText("Create Subset");
        fileMenu.add(createSubsetMenuItem);

        jMenuBar1.add(fileMenu);

        editMenu.setText("Edit");

        createNewColumnMenuItem.setText("Create New Column");
        editMenu.add(createNewColumnMenuItem);

        restoreSetMenuItem.setText("Restore Set");
        editMenu.add(restoreSetMenuItem);

        jMenuBar1.add(editMenu);

        selectMenu.setText("Select");
        selectMenu.setName(""); // NOI18N

        invertSelectionMenuItem.setText("Invert Selection");
        selectMenu.add(invertSelectionMenuItem);

        applyMaskMenuItem.setText("Apply Mask");
        selectMenu.add(applyMaskMenuItem);

        jMenuBar1.add(selectMenu);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(dataTabsPane)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(selectAllButton, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(invertSelectionButton, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(filterExpressionField, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(selectPointsButton, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(applyMaskButton, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(220, 220, 220))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(dataTabsPane, javax.swing.GroupLayout.PREFERRED_SIZE, 611, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(filterExpressionField, javax.swing.GroupLayout.DEFAULT_SIZE, 38, Short.MAX_VALUE)
                    .addComponent(selectPointsButton)
                    .addComponent(applyMaskButton)
                    .addComponent(selectAllButton)
                    .addComponent(invertSelectionButton))
                .addContainerGap())
        );

        dataTabsPane.getAccessibleContext().setAccessibleName("Point Metadata");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void selectAllButtonActionPerformed(
            java.awt.event.ActionEvent evt) {// GEN-FIRST:event_selectAllButtonActionPerformed
        // TODO add your handling code here:
    }// GEN-LAST:event_selectAllButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton applyMaskButton;
    private javax.swing.JMenuItem applyMaskMenuItem;
    private javax.swing.JMenuItem broadcastToSampMenuItem;
    private javax.swing.JMenuItem createNewColumnMenuItem;
    private javax.swing.JMenuItem createSubsetMenuItem;
    private javax.swing.JTabbedPane dataTabsPane;
    private javax.swing.JMenu editMenu;
    private javax.swing.JMenuItem extractToSedMenuItem;
    private javax.swing.JMenu fileMenu;
    private javax.swing.JTextField filterExpressionField;
    private javax.swing.JButton invertSelectionButton;
    private javax.swing.JMenuItem invertSelectionMenuItem;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel plotterMetadataPanel;
    private javax.swing.JScrollPane plotterMetadataScrollPane;
    private javax.swing.JPanel pointMetadataPanel;
    private javax.swing.JScrollPane pointMetadataScrollPane;
    private javax.swing.JMenuItem restoreSetMenuItem;
    private javax.swing.JPanel segmentMetadataPanel;
    private javax.swing.JScrollPane segmentMetadataScrollPane;
    private javax.swing.JButton selectAllButton;
    private javax.swing.JMenu selectMenu;
    private javax.swing.JButton selectPointsButton;
    // End of variables declaration//GEN-END:variables
}
