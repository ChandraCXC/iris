#!/bin/bash

function start_iris {

    bindir=$( cd -P "$( dirname "$0" )" && pwd )
    if [ -h "$0" ]; then
        bindir=$( cd -P "$( dirname "`readlink -n "$0"`" )" && pwd )
    fi

    export IRIS_DIR="$bindir"
    export IRIS_DOC="http://cxc.cfa.harvard.edu/iris/v2.0/"

    args="-Xms256m -Xmx1024m -Dhttp.agent=iris/${project.version}"

    if test -x /usr/bin/sw_vers && /usr/bin/sw_vers | grep -q 'OS.X'; then
      args="$args -Xdock:name=Iris"
    fi

    if [ ! -d ~/.vao/iris/ ]; then
          echo "Creating Iris directory in ~/.vao"
          mkdir -p ~/.vao/iris
    fi

    java $args -DIRIS_DIR="$bindir" -jar "$bindir"/${project.name}-${project.version}.jar --ssa $@ &
    irispid=$!
    echo "Started Iris with pid $irispid"

    sherpagrep=`ps aux | grep sherpa`

    if [[ $sherpagrep == *startsherpa.py* ]]
    then
        echo "Sherpa already running\n"
    else
        export DYLD_LIBRARY_PATH=$bindir/lib/sherpa/lib
        export LD_LIBRARY_PATH=$bindir/lib/sherpa/lib
        unset PYTHONPATH

        "$bindir"/lib/sherpa/bin/python2.6 "$bindir"/lib/sherpa/startsherpa.py &>~/.vao/iris/sherpa.log&
        sherpapid=$!
        echo "Started Sherpa with pid $sherpapid"
    fi

    wait $irispid

    echo "Killing Sherpa process..."

    [ "$sherpapid" ] && kill -2 $sherpapid

    sleep 5

    sherpagrep=`ps aux | grep sherpa`

    if [[ $sherpagrep == *startsherpa.py* ]]
    then
        kill -9 "$sherpapid"
    fi

    sherpagrep=`ps aux | grep sherpa`

    if [[ $sherpagrep == *startsherpa.py* ]]
    then
        echo "WARNING: Sherpa process still running with PID $sherpapid. Please kill this process manually"
    else
        echo "ALL DONE. Quitting."
    fi
}

if type -p java; then
    echo Found java executable in PATH
    _java=java
elif [[ -n "$JAVA_HOME" ]] && [[ -x "$JAVA_HOME/bin/java" ]];  then
    echo Found java executable in JAVA_HOME     
    _java="$JAVA_HOME/bin/java"
else
    echo "No java found, quitting. Please follow instructions at http://cxc.cfa.harvard.edu/${project.name}/v${project.version}/download/index.html"
fi

if [[ "$_java" ]]; then
    version=$("$_java" -version 2>&1 | awk -F '"' '/version/ {print $2}')
    echo Found java version "$version"
    if [[ "$version" > "1.6" ]]; then
        echo "This java version is ok, starting Iris"
        start_iris $@
    else         
        echo "This java version is too old, quitting. Please follow instructions at http://cxc.cfa.harvard.edu/${project.name}/v${project.version}/download/index.html"
    fi
fi
