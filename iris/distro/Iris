#!/bin/bash

#
# Copyright (C) 2011, 2015 Smithsonian Astrophysical Observatory
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#         http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

function start_iris {

    bindir=$( cd -P "$( dirname "$0" )" && pwd )
    if [ -h "$0" ]; then
        bindir=$( cd -P "$( dirname "`readlink -n "$0"`" )" && pwd )
    fi

    export IRIS_DIR="$bindir"
    export IRIS_DOC="http://cxc.cfa.harvard.edu/iris/v${project.version}/"

    if [ -z "$IRIS_LOG_LOCATION" ]; then
        export IRIS_LOG_LOCATION="$HOME/.vao/iris/logs"
    fi

    if [ -z "$IRIS_LOG_NAME" ]; then
        export IRIS_LOG_Name="IrisLog-"
    fi

    args="-Xms256m -Xmx1024m $IRIS_EXTRA_FLAGS -Dhttp.agent=iris/${project.version}"

    if test -x /usr/bin/sw_vers && /usr/bin/sw_vers | grep -q 'OS.X'; then
      args="$args -Xdock:name=Iris"
    fi

    if [ ! -d ~/.vao/iris/ ]; then
          echo "Creating Iris directory in ~/.vao"
          mkdir -p ~/.vao/iris
    fi

    if [ ! -d ~/.vao/iris/logs ]; then
          echo "Creating Iris logs directory in ~/.vao/iris"
          mkdir -p ~/.vao/iris/logs
    fi

    java $args -DIRIS_DIR="$bindir" -jar "$bindir"/${project.name}-${project.version}.jar --ssa $@ &
    irispid=$!
    echo "Started Iris with pid $irispid"

    sherpagrep=`ps aux | grep sherpa`

    if [[ $sherpagrep == *sherpa-samp.py* ]]
    then
        echo "Sherpa already running\n"
    else
        export DYLD_LIBRARY_PATH=$bindir/lib/sherpa/lib
        export LD_LIBRARY_PATH=$bindir/lib/sherpa/lib
        unset PYTHONPATH

        sherpa-samp &>$HOME/.vao/iris/sherpa.log&
        sherpapid=$!
        echo "Started Sherpa with pid $sherpapid"
    fi

    wait $irispid
    exit_code=$?

    echo "Killing Sherpa process..."

    pkill -2 -f sherpa-samp

    sleep 5

    sherpagrep=`ps aux | grep sherpa`

    if [[ $sherpagrep == *sherpa-samp* ]]
    then
        pkill -9 -f sherpa-samp
    fi

    sleep 2

    sherpagrep=`ps aux | grep sherpa`

    if [[ $sherpagrep == *sherpa-samp* ]]
    then
        echo "WARNING: Sherpa processes still running. Please kill these processes manually."
    else
        echo "ALL DONE. Quitting."
    fi

    exit $exit_code
}

if type -p java; then
    echo Found java executable in PATH
    _java=java
elif [[ -n "$JAVA_HOME" ]] && [[ -x "$JAVA_HOME/bin/java" ]];  then
    echo Found java executable in JAVA_HOME     
    _java="$JAVA_HOME/bin/java"
else
    echo "No java found, quitting. Please follow instructions at http://cxc.cfa.harvard.edu/${project.name}/v${project.version}/download/index.html"
fi

if [[ "$_java" ]]; then
    version=$("$_java" -version 2>&1 | awk -F '"' '/version/ {print $2}')
    echo Found java version "$version"
    if [[ "$version" > "1.6" ]]; then
        echo "This java version is ok, starting Iris"
        start_iris $@
    else         
        echo "This java version is too old, quitting. Please follow instructions at http://cxc.cfa.harvard.edu/${project.name}/v${project.version}/download/index.html"
    fi
fi
