<!--

  Copyright (C) 2012, 2013, 2015 Smithsonian Astrophysical Observatory
 
  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at
 
          http://www.apache.org/licenses/LICENSE-2.0
 
  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
 
-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <artifactId>iris</artifactId>
    <packaging>jar</packaging>
    <name>iris</name>
    <scm>
        <developerConnection>scm:git:https://github.com/ChandraCXC/iris.git</developerConnection>
    </scm>
    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.build.timestamp.format>yyyy/MM/dd</maven.build.timestamp.format>
        <buildDate>${maven.build.timestamp}</buildDate>
        <samp.jar>${project.build.directory}/lib/jsamp-${jsamp.version}-${jsamp.classifier}.jar</samp.jar>
        <sherpa.command>sherpa-samp</sherpa.command>
    </properties>

    <parent>
        <groupId>cfa.vo</groupId>
        <artifactId>iris2</artifactId>
        <version>3.0-SNAPSHOT</version>
    </parent>

    <dependencies>

        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>iris-common</artifactId>
            <version>${project.version}</version>
            <type>test-jar</type>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>iris-common</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>test-components</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>jsky</groupId>
            <artifactId>jsky</artifactId>
            <version>3.0</version>
        </dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>iris-visualizer</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.10</version>
        </dependency>
        <dependency>
            <groupId>cfa.vo</groupId>
            <artifactId>sed-builder</artifactId>
            <version>${project.version}</version>
            <type>jar</type>
        </dependency>
        <dependency>
            <groupId>org.swinglabs</groupId>
            <artifactId>swing-layout</artifactId>
            <version>1.0.3</version>
        </dependency>
        <dependency>
            <groupId>org.asdc.iris.plugin</groupId>
            <artifactId>AsdcIrisPlugin</artifactId>
            <version>1.1.7</version>
        </dependency>
    </dependencies>

    <build>

        <resources>
            <resource>
                <directory>distro</directory>
                <filtering>true</filtering>
            </resource>
            <resource>
                <directory>src/main/resources</directory>
            </resource>
        </resources>

        <plugins>

            <plugin>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/lib</outputDirectory>
                        </configuration>
                    </execution>

                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <configuration>
                    <archive>
                        <manifest>
                            <addClasspath>true</addClasspath>
                            <classpathPrefix>lib/</classpathPrefix>
                            <mainClass>cfa.vo.iris.Iris</mainClass>
                            <packageName>cfa.vo.iris</packageName>
                        </manifest>
                    </archive>
                </configuration>
            </plugin>

            <plugin>
                <artifactId>maven-resources-plugin</artifactId>
<!--                <version>2.5</version>-->
                <executions>
                    <execution>
                        <id>copy-resources</id>
            <!-- here the phase you need -->
                        <phase>package</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <nonFilteredFileExtensions>
                                <nonFilteredFileExtension>jar</nonFilteredFileExtension>
                            </nonFilteredFileExtensions>
                            <outputDirectory>${basedir}/target/</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>${basedir}/distro</directory>
                                    <filtering>true</filtering>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- Startup and Shutdown of the SAMP environment for integration tests -->
            <!-- Executions bind to the pre-integration-test and post-integration-test phases -->
            <plugin>
                <artifactId>maven-antrun-plugin</artifactId>
                <groupId>org.apache.maven.plugins</groupId>
                <executions>
                    <execution>
                        <id>Startup SAMP</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <!-- otherwise the outproperty below would not bubble up in maven -->
                            <exportAntProperties>true</exportAntProperties>
                            <target name="startup">
                                <!-- first start the samp hub by executing the jsamp jar -->
                                <exec executable="java" spawn="true">
                                    <arg value="-jar"/>
                                    <arg value="${samp.jar}"/>
                                </exec>
                                <!-- then start sherpa-samp -->
                                <!-- both executions happen in the background (spawn = true)
                                otherwise the maven process would wait for the tasks to finish and hang -->
                                <exec executable="${sherpa.command}" spawn="true"/>
                                <!-- use jps to find the hub pid. Maybe there is a better way of doing this?
                                 The output is recorded in the hub.pid ant property, which will be available to maven -->
                                <exec executable="jps">
                                    <arg value="-l"/>
                                    <redirector outputproperty="hub.pid">
                                        <outputfilterchain>
                                            <linecontains>
                                                <contains value="${samp.jar}"/>
                                            </linecontains>
                                            <replacestring from=" ${samp.jar}"/>
                                        </outputfilterchain>
                                    </redirector>
                                </exec>
                            </target>
                        </configuration>
                    </execution>
                    <execution>
                        <id>Shutdown SAMP</id>
                        <phase>post-integration-test</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <target name="shutdown">
                                <!-- stop sherpa-samp -->
                                <exec executable="killall">
                                    <!-- sherpa-samp is designed to cleanly shutdown and disconnect from the hub after a SIGINT -->
                                    <arg value="-2"/>
                                    <arg value="${sherpa.command}"/>
                                </exec>
                                <!-- stop the SAMP hub -->
                                <exec executable="kill">
                                    <arg value="-9"/>
                                    <arg value="${hub.pid}"/>
                                </exec>
                            </target>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

        </plugins>
    </build>

</project>
