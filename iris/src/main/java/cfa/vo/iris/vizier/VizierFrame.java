/**
 * Copyright (C) 2012, 2015 Smithsonian Astrophysical Observatory
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *         http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * VizierFrame.java
 *
 * Created on May 23, 2012, 7:32:18 PM
 */

package cfa.vo.iris.vizier;

import cfa.vo.iris.gui.NarrowOptionPane;
import cfa.vo.iris.sed.ExtSed;
import cfa.vo.iris.sed.ISedManager;
import cfa.vo.iris.sed.SedlibSedManager;
import cfa.vo.sedlib.Segment;

import javax.swing.*;
import java.net.ConnectException;
import java.util.ArrayList;
import java.util.Collection;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;

public class VizierFrame extends javax.swing.JInternalFrame {
    private SedlibSedManager manager;

    private String targetName;
    public static final String PROP_TARGETNAME = "targetName";
    
    private String searchRadius = "5";
    public static final String PROP_SEARCHRADIUS = "searchRadius";

    /**
     * Get the value of name
     *
     * @return the value of name
     */
    public String getTargetName() {
        return targetName;
    }
    
    public String getSearchRadius() {
        return searchRadius;
    }

    /**
     * Set the value of name
     *
     * @param name new value of name
     */
    public void setTargetName(String name) {
        String oldName = this.targetName;
        this.targetName = name;
        firePropertyChange(PROP_TARGETNAME, oldName, name);
    }
    
    public void setSearchRadius(String name) {
        String oldName = this.searchRadius;
        this.searchRadius = name;
        firePropertyChange(PROP_SEARCHRADIUS, oldName, name);
    }


    /** Creates new form VizierFrame */
    public VizierFrame(ISedManager manager) {
        initComponents();
        this.manager = (SedlibSedManager) manager;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        jPanel4 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        vizierTargetName = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        vizierRadius = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        sedCreationType = new javax.swing.JComboBox();
        busy = new org.jdesktop.swingx.JXBusyLabel();
        jButton1 = new javax.swing.JButton();

        setClosable(true);
        setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
        setIconifiable(true);
        setResizable(true);
        setTitle("Vizier Client");
        setMaximumSize(null);
        setMinimumSize(null);
        setPreferredSize(null);
        getContentPane().setLayout(new java.awt.GridBagLayout());

        jPanel4.setName("jPanel4"); // NOI18N
        jPanel4.setLayout(new javax.swing.BoxLayout(jPanel4, javax.swing.BoxLayout.PAGE_AXIS));

        jPanel1.setName("jPanel1"); // NOI18N
        jPanel1.setLayout(new javax.swing.BoxLayout(jPanel1, javax.swing.BoxLayout.LINE_AXIS));

        jLabel1.setText("Target Name: ");
        jLabel1.setName("jLabel1"); // NOI18N
        jPanel1.add(jLabel1);

        vizierTargetName.setName("vizierTargetName"); // NOI18N

        org.jdesktop.beansbinding.Binding binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${targetName}"), vizierTargetName, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        jPanel1.add(vizierTargetName);

        jPanel4.add(jPanel1);

        jPanel3.setName("jPanel3"); // NOI18N
        jPanel3.setLayout(new javax.swing.BoxLayout(jPanel3, javax.swing.BoxLayout.LINE_AXIS));

        jLabel3.setText("Search Radius:");
        jLabel3.setName("jLabel3"); // NOI18N
        jPanel3.add(jLabel3);

        vizierRadius.setMinimumSize(new java.awt.Dimension(60, 23));
        vizierRadius.setName("vizierRadius"); // NOI18N

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${searchRadius}"), vizierRadius, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        jPanel3.add(vizierRadius);

        jLabel2.setText("(arcseconds)");
        jLabel2.setName("jLabel2"); // NOI18N
        jPanel3.add(jLabel2);

        jPanel4.add(jPanel3);

        jPanel2.setName("jPanel2"); // NOI18N
        jPanel2.setLayout(new javax.swing.BoxLayout(jPanel2, javax.swing.BoxLayout.LINE_AXIS));

        jLabel4.setText("Mode:");
        jLabel4.setName("jLabel4"); // NOI18N
        jPanel2.add(jLabel4);

        sedCreationType.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Append", "Create" }));
        sedCreationType.setName("sedCreationType"); // NOI18N
        jPanel2.add(sedCreationType);

        busy.setName("busy"); // NOI18N
        jPanel2.add(busy);

        jButton1.setText("Load");
        jButton1.setName("jButton1"); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                load(evt);
            }
        });
        jPanel2.add(jButton1);

        jPanel4.add(jPanel2);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        getContentPane().add(jPanel4, gridBagConstraints);

        bindingGroup.bind();

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void load(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_load
        load();
    }//GEN-LAST:event_load

    private void load() {
        int idx = sedCreationType.getSelectedIndex();
        SwingWorker worker = new VizierSwingWorker(targetName, searchRadius, idx);
        worker.execute();
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private org.jdesktop.swingx.JXBusyLabel busy;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JComboBox sedCreationType;
    private javax.swing.JTextField vizierRadius;
    private javax.swing.JTextField vizierTargetName;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables

    private class VizierSwingWorker extends SwingWorker {
        private String name;
        private String radius;
        private int selectedIndex;
        private String error;

        public VizierSwingWorker(String name, String radius, int selectedIndex) {
            this.name = name;
            this.radius = radius;
            this.selectedIndex = selectedIndex;
            busy.setBusy(true);
        }

        @Override
        protected void done() {
            if (error != null) {
                NarrowOptionPane.showMessageDialog(VizierFrame.this, error,
                        "Error", NarrowOptionPane.ERROR_MESSAGE);
            }
            busy.setBusy(false);
        }

        @Override
        protected Void doInBackground() throws Exception {
            try {
                Collection<Segment> segments = VizierImporter.getSedFromName(name, Double.parseDouble(radius));
                ExtSed selectedSed = manager.getSelected();

                boolean add = false;

                if (selectedSed == null || selectedIndex == 1) {
                    add = true;
                    selectedSed = new ExtSed("Vizier", false);
                }

            /* Check for duplicate points.
             *
             * If duplicate point values are in segMap, fire VizierDuplicatePointsFrame
             * and based on the user input, keep or remove all duplicate points.
             *
             * Check for duplicate points
             *
             * TODO
             */

                List<Segment> segs = new ArrayList<>(segments);

                selectedSed.addSegment(segs);
                if (add) {
                    manager.add(selectedSed);
                }
            } catch (NumberFormatException ex) {
                Logger.getLogger(VizierFrame.class.getName()).log(Level.SEVERE, null, ex);
                error = "Not a valid search radius: " + radius;
            } catch (ConnectException ex) {
                Logger.getLogger(VizierFrame.class.getName()).log(Level.SEVERE, null, ex);
                error = "Connection error with Vizier/CDS service" + name;
            } catch (Exception ex) {
                Logger.getLogger(VizierFrame.class.getName()).log(Level.SEVERE, null, ex);
                error = "Cannot find data for target " + name;
            }
            return null;
        }
    }
}

